<template>
    <div>
        <div class="detailedType">
          <ul>
            <li>
              <router-link :to="{path:'/sellDetailed/uncommitted',query:{noCommitList: findPlacingListData.noCommitList}}" replace>
                <span>未提交</span>
              </router-link>
            </li>
            <li>
              <router-link :to="{path:'/sellDetailed/submitted',query:{ commitList: findPlacingListData.commitList}}"
              replace>
                <span>已提交</span>
              </router-link>
            </li>
            <li>
              <router-link :to="{path:'/sellDetailed/sellSuccess',query:{ successList: findPlacingListData.successList}}" replace>
                <span>配售成功</span>
              </router-link>
            </li>
            <li>
              <router-link :to="{path:'/sellDetailed/sellFail',query:{ failList: findPlacingListData.failList}}" replace>
                <span>配售失败</span>
              </router-link>
            </li>
          </ul>
        </div>
        <div style="height: 0.6rem"></div>
        <router-view></router-view>
        <div style="height: 1rem"></div>
        <div class="search-box">
          <div class="search-left">
            <div class="search" v-bind:class="{ animation: animationState}">
              <input type="text" placeholder="请输入交易商账号或姓名" v-model="tradeUser" @keyup="change">
              <i @click="animation"><img src="../../../../assets/search.png" alt=""></i>
            </div>
          </div>
          <div class="search-right">
            <span @click="submitPlacing" v-bind:class="{ hui: sta}">提交全部</span>
          </div>
        </div>
        <div class="goHome" @click="gohome"><img src="../../../../assets/gohome.png" alt=""></div>
    </div>
</template>

<script>
import load from 'components/load/load';

const ERR_OK = 'success';

 export default{
    components:{
      'v-load': load
    },
    data() {
      return{
        animationState: true,
        tradeUser: null, //请输入经纪商账号或姓名
        sessionToken: localStorage.getItem("sessionToken"),
        findPlacingListData: {},
        productId: null,
        sta: true
      }
    },
    created() {
       this.productId = this.$route.query.productId;
    },
    methods: {
      animation: function(){
        
        if(this.tradeUser == null || this.tradeUser == ''){
          if (this.animationState) {
            this.animationState = false
          }else{
            this.animationState = true
          }
        }else{
          // alert(this.accountNo)
          this.findPlacingList(this.tradeUser);
          this.$router.push({ path: '/sellDetailed' })
        }
      },
      change: function(){
        if(this.tradeUser == ''){
          this.findPlacingList('');
          this.$router.push({ path: '/sellDetailed' })
        }
      },
      findPlacingList: function(tradeUser){
        this.$http.get('/api/findPlacingList',{params:{ sessionToken: this.sessionToken, productId: this.productId, tradeUser: tradeUser}}).then((response) => { 
          if(response.body.result == ERR_OK){ 
            this.findPlacingListData = response.body.data;
            if(this.findPlacingListData.noCommitList == '' ){
              this.findPlacingListData.noCommitList = null
            }
            if(this.findPlacingListData.commitList == '' ){
              this.findPlacingListData.commitList = null
            }
            if(this.findPlacingListData.successList == '' ){
              this.findPlacingListData.successList = null
            }
            if(this.findPlacingListData.failList == '' ){
              this.findPlacingListData.failList = null
            }
            this.$router.push({ path: '/sellDetailed/uncommitted', query:{noCommitList: this.findPlacingListData.noCommitList}})
            
            if(this.findPlacingListData.submitState == "N"){
              this.sta = true;
            }else{
              this.sta = false;
            }
          }else{
            alert(response.body.message)
          }   
        }).then((error)=> this.error = error)
      },
      submitPlacing: function(){

        if(!this.sta){
          this.$http.get('/api/submitPlacing?',{params:{sessionToken: this.sessionToken, productId: this.productId}}).then((response) => { 
            if(response.body.result == ERR_OK){ 
              alert('成功')
            }else{
              // this.$refs.timerbtn.stop();
              alert('失败')
            }

          }).then((error)=> this.error = error)
        }
      },
      gohome: function(){
        this.$router.push({ path: '/main/packageH' });
      }
    },
    mounted(){
      // alert(this.$route.query.productId)
      this.findPlacingList('');

      localStorage.setItem('productId', this.$route.query.productId);
    }
 };
</script>

<style lang="stylus" rel="stylesheet/stylus">
    .goHome
      position: fixed
      width: 0.55rem
      height: 0.55rem
      bottom: 0.6rem
      right: 0
      opacity: 0.8
      img
        width: 100%
        height: 100%
    .search-box
      position: fixed
      width: 100%
      max-width: 640px
      height: 0.58rem
      background-color: #FFF
      bottom: 0
      padding: 0 0.12rem
      &::after
        position: absolute
        top: 0
        right: 0
        display: block
        content: ''
        width: 100%
        height: 1px
        background-color: #ccc
        transform: scaleY(0.5)
        -webkit-transform: scaleY(0.5)
      .search-right
        float: right
        span
          display: block
          width: 1.35rem
          height: 0.35rem
          background-color: #ff6000
          color: #fff
          line-height: 0.35rem
          border-radius: 0.2rem
          text-align: center
          margin-top: 0.11rem
          &.hui
            background-color: #ccc
      .search-left
        float: left
        .search
          position: relative
          height: 0.35rem
          width: 0.3rem
          border-radius: 0.2rem
          border: 1px solid #ff6000
          margin-top: 0.11rem
          background-color: #f3f3f3
          overflow: hidden
          padding: 0 0.36rem 0 0.04rem
          transition: all 1s ease 0s
          &.animation
            width: 1.75rem
            transition: all 1s ease 0s
          input
            width: 100%
            height: 100%
            background-color: transparent
            border: none
            outline: none
            text-align: center
          i
            position: absolute
            top: 0.015rem
            right: 0.02rem
            width: 0.3rem
            height: 0.3rem
            img
              width: 100%
              height: 100%
    .active
      color: #ff6000
      span
        position: relative
        &::after
          position: absolute
          bottom: 0
          right: 0
          display: block
          content: ''
          width: 100%
          height: 2px
          background-color: #ff6000
          transform: scaleY(0.5)
          -webkit-transform: scaleY(0.5)
    .detailedType
      position: fixed
      left: 50%
      top: 0
      width: 100%
      max-width: 640px
      height: 0.5rem
      transform: translateX(-50%)
      -webkit-transform: translateX(-50%)
      background-color: #fff
      z-index: 1 
      &::after
        position: absolute
        bottom: 0
        right: 0
        display: block
        content: ''
        width: 100%
        height: 1px
        background-color: #ccc
        transform: scaleY(0.5)
        -webkit-transform: scaleY(0.5)
      li
        position: relative
        float: left
        width: 25%
        text-align: center
        height: 0.5rem
        line-height: 0.5rem
        &:nth-last-child(1)::after
          display: none
        &::after
          position: absolute
          bottom: 0
          right: 0
          display: block
          content: ''
          width: 1px
          height: 100%
          background-color: #ccc
          transform: scaleX(0.5) scaleY(0.5)
          -webkit-transform: scaleX(0.5) scaleY(0.5)
        span
          display: inline-block
</style>