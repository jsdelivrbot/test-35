<template>
	<div>
		<div class="section">
		  <div class="hd">
		    <div class="hd-inner border-bottom-1px">
		      <span class="hd-title">交易商汇总</span>
		    </div>
		  </div>
		  <div class="bd">
		    <div class="content overview">
		      <ul>
		        <li>交易商：<span>{{tradeUserTotalData.traderUser}}</span></li>
		        <li>签约量：<span>{{tradeUserTotalData.signUser}}</span></li>
		        <li>认购客户：<span>{{tradeUserTotalData.subscribeUser}}</span></li>
		        <li>交易客户：<span>{{tradeUserTotalData.transactionUser}}</span></li>
		      </ul>
		    </div>
		  </div>
		</div>

		<div style="height:0.1rem"></div>

		<div class="section">
		  <div class="hd">
		    <div class="hd-inner border_1px">
		      <span class="hd-title">近7日新增交易商趋势</span>
		      <div class="legend">
		        <span>开户量</span>
		        <span>签约量</span>
		      </div>
		      <span class="dete-control column-control" @click="showDetetrend"></span>
		      <div class="stage-box column-dete" v-show="detetrend">
		        <div class="stage-inner">
		          <ul id="monthList">
		            <li @click="hideDetetrend" v-for="(item, index) in newAddTradeUserTrendDete" >
		            	<p @click="getNewAddTradeUserTrendData(newAddTradeUserTrendDete[index].dateKey)">{{newAddTradeUserTrendDete[index].dateValue}}</p>	
		            </li>
		          </ul>
		        </div>
		      </div>
		    </div>
		  </div>
		  <div class="bd">
		    <div class="content chart-polyline">
		      <div id="main-polyline" style="width:100%;height:200px;"></div>
		    </div>
		  </div>
		</div>

		<div style="height:0.1rem"></div>

		<div class="section">
		  <div class="hd">
		    <div class="hd-inner border_1px">
		      <span class="hd-title">近7日活跃情况</span>
		      <div class="legend">
		        <span>在线</span>
		        <span>参与交易</span>
		      </div>
		      <span class="dete-control column-control" @click="showDetelist"></span>
		      <div class="stage-box column-dete" v-show="detailShow">
		        <div class="stage-inner">
		          <ul id="monthList">
		            <li @click="hideDetetrend" v-for="(item, index) in activeTrendDate" >
		            	<p @click="getActiveTrendData(activeTrendDate[index].dateKey)">{{activeTrendDate[index].dateValue}}</p>
		            </li>
		          </ul>
		        </div>
		      </div>
		    </div>
		  </div>
		  <div class="bd">
		    <div class="content chart-column">
		      <div id="main-column" style="width:100%;height:200px;"></div>
		    </div>
		  </div>
		</div>
		<div class="stage-cover" v-show="cover" @click="hideDetelist"></div>
	</div>
</template>

<script>
import echarts from 'common/js/echarts.min.js';
const ERR_OK = 'success';

 export default{
 	data() {
 		return {
 			detailShow: false,
 			detetrend: false,
 			cover: false,
 			datetrend:['2017-03','2017-03','2017-02','2017-02','2017-01'],
 			tradeUserTotalData: {},
 			newAddTradeUserTrendDate: {},
 			newAddTradeUserTrendDete: [],
 			activeTrendData: {},
 			activeTrendDate: [],
 			session_token: localStorage.getItem("session_token")
 		};
 	},
 	created() {
 		this.tradeUserTotal();
 		this.newAddTradeUserTrend('');
 		this.activeTrend('');
 	},
 	methods: {
 		showDetelist: function() {
 			this.detailShow = true;
 			this.cover = true;
 		},
 		hideDetelist: function(){
 			this.detailShow = false;
 			this.detetrend = false;
 			this.cover = false;
 		},
 		showDetetrend: function(){
 			this.detetrend = true;
 			this.cover = true;
 		},
 		hideDetetrend: function(){
 			this.detetrend = false;
 			this.detailShow = false;
 			this.cover = false;
 		},
        getNewAddTradeUserTrendData: function(date) {
        	this.newAddTradeUserTrend(date);
        },
        getActiveTrendData: function(date) {
        	this.activeTrend(date);
        },
        tradeUserTotal: function() {
        	this.$http.get('/api/tradeUserTotal',{params:{ session_token: this.session_token}}).then((response) => { 
        		if(response.body.result == ERR_OK){ 
        			this.tradeUserTotalData = response.body.data;
        		}else{
        			
        		}
        		
        	}).then((error)=> this.error = error)
        },
        newAddTradeUserTrend: function(date) {
        	this.newAddTradeUserTrendDete = [];
        	this.$http.get('/api/newAddTradeUserTrend',{params:{ session_token: this.session_token, date: date}}).then((response) => { 
        		if(response.body.result == ERR_OK){ 
        			this.newAddTradeUserTrendDate = response.body.data;
        			this.ArryReverse(this.newAddTradeUserTrendDate.selectDateList, this.newAddTradeUserTrendDete);
        			this.folding('main-polyline', this.newAddTradeUserTrendDate.dateList, this.newAddTradeUserTrendDate.openAccountlist, this.newAddTradeUserTrendDate.signAccountlist);
        		}else{
        			alert(response.body.message);
        		}
        		
        	}).then((error)=> this.error = error)
        },
        activeTrend: function(date) {
        	this.$http.get('/api/activeTrend',{params:{ session_token: this.session_token, date: date}}).then((response) => { 
        		if(response.body.result == ERR_OK){ 
        			this.activeTrendData = response.body.data;
        			this.ArryReverse(this.activeTrendData.selectDateList, this.activeTrendDate);
        			this.column('main-column', this.activeTrendData.dateList, this.activeTrendData.onLinelist, this.activeTrendData.joinTransactionUserList)
        		}else{
        			alert(response.body.message);
        		}
        		
        	}).then((error)=> this.error = error)
        },
        ArryReverse: function(arry, curArry) {
          for(var i = arry.length-1; i >= 0; i--){
            curArry.push(arry[i]);
          }
        },
        folding: function(el, v1, v2, v3){
          let folding = echarts.init(document.getElementById(el));
          let option_folding = {
              tooltip: {
                  trigger: 'item',
                  formatter: '{a} <br/>{b} : {c}'
              },
              xAxis: {
                  type: 'category',
                  splitLine: {show: false},
                  data: v1,
                  axisLabel: {
                     interval: 0
                  }
              },
              grid: {
                  left: '3%',
                  right: '4%',
                  bottom: '3%',
                  containLabel: true
              },
              yAxis: {
                  type: 'log'
              },
              series: [
                  {
                      type: 'line',
                      data: v2,
                      name: "开户量",
                      itemStyle: {
                        normal: {
                          color:'#ff6701',
                           // label: {
                           //   show: true,
                           //   position: 'top',
                           //   formatter: "{c}"
                           // }
                        }
                      }
                  },
                  {
                      type: 'line',
                      name: "签约量",
                      data: v3,
                      itemStyle: {
                        normal: {
                          color:'#54b9ff',
                           // label: {
                           //   show: true,
                           //   position: 'top',
                           //   formatter: "{c}"
                           // }
                        }
                      }
                  }
              ]
          };

          folding.setOption(option_folding);
        },
        column: function(el, date, v1, v2) {
	        let column = echarts.init(document.getElementById(el));
	        let option_column = {
	        	tooltip: {
	        	    trigger: 'item',
	        	    formatter: '{a} <br/>{b} : {c}'
	        	},
		         color: ['#ff954b','#54b9ff'],
		         grid: {
		              left: '3%',
		              right: '3%',
		              bottom: '3%',
		              top: '3%',
		              containLabel: true
		          },
		         calculable : true,
		         xAxis : [
		             {  
		                 // splitArea : {show : true},
		                 type : 'category',
		                 data : date,
		                 axisLabel :{  
		                      interval:0,
		                  }
		             }
		         ],
		         yAxis : [
		             {
		                 type : 'value',
		                 axisLabel: {
		                     formatter: '{value}'
		                 },
		                 axisTick: {
		                      alignWithLabel: true
		                  }
		             }
		         ],
		         series : [
		             {
		                 type:'bar',
		                 name:'在线',
		                 data:v1,
		                 itemStyle: {
		                   normal: {
		                       color: new echarts.graphic.LinearGradient(
		                            0, 0, 0, 1,
		                            [
		                                {offset: 0, color: '#ff7417'},
		                                {offset: 0.5, color: '#ff9a56'},
		                                {offset: 1, color: '#ffb584'}
		                            ]
		                        ),
		                       barBorderRadius:[5, 5, 0, 0],
		                      //  label: {
		                      //   show: true,
		                      //   position: 'top',
		                      //   formatter: "{c}"
		                      // }
		                   }
		                },
		                barGap: '1%',
		                barWidth: 13
		             },
		             {
		                 type:'bar',
		                 name:'参与交易',
		                 data:v2,
		                 itemStyle: {
		                   normal: {
		                       color: new echarts.graphic.LinearGradient(
		                            0, 0, 0, 1,
		                            [
		                                {offset: 0, color: '#59bbff'},
		                                {offset: 0.5, color: '#80cbff'},
		                                {offset: 1, color: '#a8dbff'}
		                            ]
		                        ),
		                       barBorderRadius:[5, 5, 0, 0],
		                      //  label: {
		                      //   show: true,
		                      //   position: 'top',
		                      //   formatter: "{c}"
		                      // }
		                   }
		                  },
		                  barGap: '1%',
		                  barWidth: 13
		             }
		         ]
		    };

		    column.setOption(option_column);
        }
 	}
 };
</script>

<style lang="stylus" rel="stylesheet/stylus">

</style>